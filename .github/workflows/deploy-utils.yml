name: Deploy Utils

on:
  push:
    branches:
      - release-utils
  workflow_call:
    secrets:
      GCP_CREDENTIALS:
        required: true
      DATABASE_URL:
        required: true
      SENDGRID_API_KEY:
        required: true
      S3_ACCESS_KEY:
        required: true
      S3_SECRET_KEY:
        required: true
      S3_ENDPOINT:
        required: true
env:
  GAR_LOCATION: europe-north1
  PROJECT_ID: rusve-384620
  REPOSITORY: rusve-repo
  DATABASE: rusve-db
  REGION: europe-north1
  SERVICE: utils
  RUST_LOG: info
  DATABASE_URL: ${{ secrets.DATABASE_URL }}&dbname=utils
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  S3_BUCKET_NAME: rusve
  S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
  S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
  S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}

permissions:
  contents: read
  id-token: write

jobs:
  lint:
    uses: ./.github/workflows/lint-utils.yml
  deploy:
    needs:
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}
      - name: Build and Push Container
        run: |-
          docker build -f ./service-${{ env.SERVICE }}/Dockerfile -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./service-${{ env.SERVICE }}
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: |
            RUST_LOG=${{ env.RUST_LOG }}
            DATABASE_URL=${{ env.DATABASE_URL }}
            SENDGRID_API_KEY=${{ env.SENDGRID_API_KEY }}
            S3_BUCKET_NAME=${{ env.S3_BUCKET_NAME }}
            S3_ACCESS_KEY=${{ env.S3_ACCESS_KEY }}
            S3_SECRET_KEY=${{ env.S3_SECRET_KEY }}
            S3_ENDPOINT=${{ env.S3_ENDPOINT }}
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
