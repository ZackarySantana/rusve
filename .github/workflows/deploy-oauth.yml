name: Deploy Oauth

on:
  push:
    branches:
      - release-oauth/**
  workflow_call:
    secrets:
      GCP_CREDENTIALS:
        required: true
      DATABASE_URL:
        required: true
      GOOGLE_CLIENT_ID:
        required: true
      GOOGLE_CLIENT_SECRET:
        required: true

env:
  GAR_LOCATION: europe-north1
  PROJECT_ID: rusve-384620
  REPOSITORY: rusve-repo
  DATABASE: rusve-db
  REGION: europe-north1
  SERVICE: oauth
  ENV: production
  RUST_LOG: info
  DATABASE_URL: ${{ secrets.DATABASE_URL }}&dbname=users
  # DATABASE_URL=postgresql:///?host=/cloudsql/${{ env.PROJECT_ID }}:${{ env.REGION }}:${{ env.DATABASE }}&user=postgres&password=${{ secrets.DB_PASS }}&dbname=users

permissions:
  contents: read
  id-token: write

jobs:
  lint:
    uses: ./.github/workflows/lint-oauth.yml
  deploy:
    needs:
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}
      - name: Build and Push Container
        run: |-
          docker build -f ./service-${{ env.SERVICE }}/Dockerfile -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./service-${{ env.SERVICE }}
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: |
            ENV=${{ env.ENV }}
            RUST_LOG=${{ env.RUST_LOG }}
            DATABASE_URL=${{ env.DATABASE_URL }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
