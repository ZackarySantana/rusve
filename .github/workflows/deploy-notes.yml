name: Deploy Notes Rust

on:
    push:
        branches:
            - release-notes/**
    workflow_call:
        secrets:
            GCP_CREDENTIALS:
                required: true
            DATABASE_URL:
                required: true

env:
    GAR_LOCATION: europe-north1
    PROJECT_ID: rusve-384620
    REPOSITORY: rusve-repo
    DATABASE: rusve-db
    SERVICE: notes
    REGION: europe-north1
    ENV: production
    DATABASE_URL: ${{ secrets.DATABASE_URL }}/notes?require_ssl=true
    # DATABASE_URL=postgresql:///?dbname=${{ env.SERVICE }}&host=/cloudsql/${{ env.PROJECT_ID }}:${{ env.REGION }}:${{ env.DATABASE }}&user=postgres&password=${{ secrets.DB_PASS }}

permissions:
    contents: read
    id-token: write

jobs:
    lint:
        uses: ./.github/workflows/lint-notes.yml
    deploy:
        needs:
            - lint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Google Auth
              id: auth
              uses: "google-github-actions/auth@v1"
              with:
                  credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
            - name: Docker Auth
              id: docker-auth
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
                  username: _json_key
                  password: ${{ secrets.GCP_CREDENTIALS }}
            - name: Build and Push Container
              run: |-
                  docker build -f ./service-${{ env.SERVICE }}/Dockerfile -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./service-${{ env.SERVICE }}
                  docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
            - name: Deploy to Cloud Run
              id: deploy
              uses: google-github-actions/deploy-cloudrun@v1
              with:
                  service: ${{ env.SERVICE }}
                  region: ${{ env.REGION }}
                  image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
                  env_vars: |
                      ENV=${{ env.ENV }}
                      DATABASE_URL=${{ env.DATABASE_URL }}
            - name: Show Output
              run: echo ${{ steps.deploy.outputs.url }}
